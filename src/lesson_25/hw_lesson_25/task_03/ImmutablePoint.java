/*
Task 3
Неизменяемый объект
Создайте класс ImmutablePoint:

•	Объявите final поля x и y типа int.
•	Инициализируйте их через конструктор.
•	Попытайтесь создать методы-сеттеры для изменения значений x и y.
•	Объясните, почему значения полей не могут быть изменены после создания объекта.
 */
package lesson_25.hw_lesson_25.task_03;

public class ImmutablePoint {
    private final int x;
    private final int y;

    public ImmutablePoint(int x, int y) {
        this.x = x;
        this.y = y;
    }

    // Пробуем создать сеттеры, но они приводят к ошибке
    /*
    public void setX(int x) {
        this.x = x; // Ошибка: нельзя изменить final-поле
    }

    public void setY(int y) {
        this.y = y; // Такая же ошибка
    }
    */

    /*
    Объяснение, почему значения полей не могут быть изменены после создания объекта.

    В классе ImmutablePoint переменные x и y объявлены как final, что делает их неизменяемыми после инициализации.
    Когда переменная объявлена с модификатором final,
    её значение можно задать только один раз – в момент объявления или в конструкторе.
    В конструкторе мы присваиваем значения x и y. После этого изменить x или y нельзя, даже внутри методов класса.

    Если попытаться сделать так:

    public void setX(int x) {
        this.x = x; // будет ошибка компиляции
    }
    компилятор выдаст ошибку:
    cannot assign a value to final variable 'x'
    Это защита от изменения данных.
     */

}
